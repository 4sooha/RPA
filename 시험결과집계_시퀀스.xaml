<Activity mc:Ignorable="sap sap2010" x:Class="시험결과집계_실습" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1140,5361.6" sap2010:WorkflowViewState.IdRef="시험결과집계_실습_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>DocumentFormat.OpenXml.Office2016.Drawing.ChartDrawing</x:String>
      <x:String>DocumentFormat.OpenXml</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="1. 원본데이터 copy : '시험결과집계_지안.xlsx' &#xA;2. 엑셀 파일 읽기: '시험결과집계_지안.xlsx'  -&gt; dt 4개 생성&#xA;3. 반복 프로세스 : 과목별 점수로 해당하는 과목, 합격여부 값 넣기(로직 같음) -&gt; 기준점수 찾기 : look up &#xA;4. 아웃풋DT로 합격률 계산해서 값 넣기 &#xA;5. 결과 엑셀파일 생성" DisplayName="시험결과집계_실습" sap:VirtualizedContainerService.HintSize="846.4,5296.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Default="[new System.data.DataTable]" Name="dtInput" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new System.data.DataTable]" Name="dt기준" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new System.data.DataTable]" Name="dt개인" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new System.data.DataTable]" Name="dt과목" />
      <Variable x:TypeArguments="x:Object" Name="obResult" />
      <Variable x:TypeArguments="s:String[]" Name="subjects" />
      <Variable x:TypeArguments="x:Int32" Name="intScore" />
      <Variable x:TypeArguments="x:String" Name="strSubject" />
      <Variable x:TypeArguments="x:String" Name="str" />
      <Variable x:TypeArguments="sd:DataRow" Name="newRow" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="Sheets" />
      <Variable x:TypeArguments="x:Boolean" Name="합격여부" />
      <Variable x:TypeArguments="x:String" Name="시험과목" />
      <Variable x:TypeArguments="x:Int32" Name="int과목별합격자" />
      <Variable x:TypeArguments="x:Int32" Name="int응시자수" />
      <Variable x:TypeArguments="x:Double" Name="db합격률" />
      <Variable x:TypeArguments="x:String" Name="str합격여부" />
      <Variable x:TypeArguments="x:Int32" Name="int기준점수" />
      <Variable x:TypeArguments="x:String" Name="합격률" />
      <Variable x:TypeArguments="x:Int32" Name="int전체항목수" />
      <Variable x:TypeArguments="x:Int32" Name="int합격한항목수" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="784,64.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;시험결과집계 시작..&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <Sequence DisplayName="DT 생성 | Sequence" sap:VirtualizedContainerService.HintSize="784,1230.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="03자료\시험결과집계_지안.xlsx" DisplayName="원본파일 카피 생성 | Copy File" sap:VirtualizedContainerService.HintSize="449.6,195.2" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="03자료\시험결과집계.xlsx" />
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="엑셀파일 읽어오기 |  Excel Application Scope" sap:VirtualizedContainerService.HintSize="449.6,906.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="03자료\시험결과집계_지안.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="416,773.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelGetWorkbookSheets sap2010:Annotation.AnnotationText="&gt;&gt;Sheets" DisplayName="시트명 리스트로 설정 | Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="353.6,96" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[Sheets]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelGetWorkbookSheets>
              <ui:ExcelReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="&gt;&gt;속성 : 머리글 추가&#xA;&gt;&gt;출력 : dtInput" DataTable="[dtInput]" DisplayName="dtInput 생성 | Read Range" sap:VirtualizedContainerService.HintSize="353.6,144" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[Sheets(0)]">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
              <ui:ExcelReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="&gt;&gt;속성 : 머리글 추가&#xA;&gt;&gt;출력 : dt기준" DataTable="[dt기준]" DisplayName="dt기준 생성 | Read Range" sap:VirtualizedContainerService.HintSize="353.6,144" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[Sheets(1)]">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
              <ui:ExcelReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="&gt;&gt;속성 : 머리글 추가&#xA;&gt;&gt;출력 : dt개인&#xA;&gt;&gt;&quot;C2:D2&quot; 즉, 컬럼만" DataTable="[dt개인]" DisplayName="dt개인 생성 | Read Range" sap:VirtualizedContainerService.HintSize="353.6,160" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="C2:D2" SheetName="[Sheets(2)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
              <ui:ExcelReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="&gt;&gt;속성 : 머리글 추가&#xA;&gt;&gt;출력 : dt과목&#xA;&gt;&gt;&quot;G2:H2&quot; 즉, 컬럼만" DataTable="[dt과목]" DisplayName="dt과목 생성 | Read Range" sap:VirtualizedContainerService.HintSize="353.6,143.2" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="G2:H2" SheetName="[Sheets(2)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="" DisplayName="DT 가공 | Sequence" sap:VirtualizedContainerService.HintSize="784,3348.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap2010:Annotation.AnnotationText="어레이 변수에 반복할 과목 넣어주기" DisplayName="반복할 과목 변수 생성 | Assign" sap:VirtualizedContainerService.HintSize="721.6,152.8" sap2010:WorkflowViewState.IdRef="Assign_19">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[subjects]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[{"국어", "영어", "수학"}]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtInput]" DisplayName="dtInput 행 반복 | For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="721.6,1918.4" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="688,1712.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="과목을 담은 subjects 변수 반복 | For Each" sap:VirtualizedContainerService.HintSize="625.6,1626.4" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[subjects]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="subject" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="592,1437.6" sap2010:WorkflowViewState.IdRef="Sequence_34">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If sap2010:Annotation.AnnotationText="&gt;&gt;Not String.IsNullOrEmpty(CurrentRow(subject).ToString)&#xA;&gt;&gt;컬럼이 비어있지 않다면 그러니깐 값이 있다면&#xA;&gt;&gt;어레이 첫번째가 &quot;국어&quot; 이니깐 1줄만 출력한다면 &quot;국어&quot; 컬럼을 돌고 있겠지요. " Condition="[Not String.IsNullOrEmpty(CurrentRow(subject).ToString)]" DisplayName="과목별 행에 값이 있다면, 조건문 | If" sap:VirtualizedContainerService.HintSize="529.6,1351.2" sap2010:WorkflowViewState.IdRef="If_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1027.2" sap2010:WorkflowViewState.IdRef="Sequence_35">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap2010:Annotation.AnnotationText="&gt;&gt;intScore = CInt(CurrentRow(subject))&#xA;&gt;&gt;값이 있는 행을 담는다&#xA;&gt;&gt;ex)75점" DisplayName="점수를 담을 변수 생성 | Assign" sap:VirtualizedContainerService.HintSize="433.6,181.6" sap2010:WorkflowViewState.IdRef="Assign_39">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intScore]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[CInt(CurrentRow(subject))]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="&gt;&gt;obResult &#xA;&gt;&gt; 과목에 맞는 기준점수를 담는다&#xA;&gt;&gt;ex) 80점" DataTable="[dt기준]" DisplayName="해당 과목의 기준점수 가져오기 | Lookup Data Table" sap:VirtualizedContainerService.HintSize="433.6,395.2" sap2010:WorkflowViewState.IdRef="LookupDataTable_12" LookupColumnName="과목" LookupValue="[subject]" TargetColumnName="기준점수">
                              <ui:LookupDataTable.CellValue>
                                <OutArgument x:TypeArguments="x:Object">[obResult]</OutArgument>
                              </ui:LookupDataTable.CellValue>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LookupDataTable>
                            <Assign sap2010:Annotation.AnnotationText="&gt;&gt;str합격여부 = If(intScore &gt;= CInt(obResult), &quot;합격&quot;, &quot;불합격&quot;)" DisplayName="합격여부 변수 생성 | Assign" sap:VirtualizedContainerService.HintSize="433.6,152.8" sap2010:WorkflowViewState.IdRef="Assign_43">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[str합격여부]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[If(intScore &gt;= CInt(obResult), "합격", "불합격")]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{subject, str합격여부}]" DataTable="[dt개인]" DisplayName="과목, 합격여부 값 채우기 | Add Data Row" sap:VirtualizedContainerService.HintSize="433.6,211.2" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,102.4" sap2010:WorkflowViewState.IdRef="Sequence_36">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <Sequence DisplayName="합격률 계산 | Sequence" sap:VirtualizedContainerService.HintSize="721.6,1148.8" sap2010:WorkflowViewState.IdRef="Sequence_79">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="과목을 담은 subjects 변수 반복 | For Each" sap:VirtualizedContainerService.HintSize="576,1036.8" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[subjects]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="subject2" />
              </ActivityAction.Argument>
              <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="542.4,848" sap2010:WorkflowViewState.IdRef="Sequence_73">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign sap2010:Annotation.AnnotationText="&gt;&gt;링큐문 : Where, Select, Count 등의 메서드를 사용하기 좋다. &#xA;AsEnumerable()메소드는 데이터 테이블을 &lt;DataRow&gt; 형식으로 변환하라는 뜻&#xA;----------------------------------------------------------------------------------&#xA;&gt;&gt;int전체항목수 = dt개인.AsEnumerable().Count(Function(row) row(&quot;시험과목&quot;).ToString() = subject2) &#xA;&#xA;뜻 : 각 행의 &quot;시험과목&quot; 열의 값이 subject2와 일치하는지 개수를 담아라&#xA;--------------------------------------------------------------------------------&#xA;&gt;&gt;int합격한항목수 = dt개인.AsEnumerable().Count(Function(row) row(&quot;시험과목&quot;).ToString() = subject2 AndAlso row(&quot;합격여부&quot;).ToString() = &quot;합격&quot;)&#xA;&#xA;뜻 : &quot;시험과목&quot; 열의 값이 subject2와 일치하고 &quot;합격여부&quot; 열 값이 &quot;합격&quot;인 개수&#xA;----------------------------------------------------------------------------------&#xA;&gt;&gt;db합격률 = If(int전체항목수 &gt; 0, (int합격한항목수 / int전체항목수) * 100, 0)&#xA;&#xA;뜻 : 전체항목수가 일단 하나 이상 있는지 검사하고, 항목이 하나 이상 있다면, 합격한 항목수를 전체 항목수로 나누어 합격률을 계산하고 100을 곱해 백분율표시&#xA;항목이 없으면 0을 반환하라 " DisplayName="링큐문으로 과목별 합격률 계산하기 | Multiple Assign" sap:VirtualizedContainerService.HintSize="480,550.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Int32">[int전체항목수]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Int32">[dt개인.AsEnumerable().Count(Function(row) row("시험과목").ToString() = subject2)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Int32">[int합격한항목수]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Int32">[dt개인.AsEnumerable().Count(Function(row) row("시험과목").ToString() = subject2 AndAlso row("합격여부").ToString() = "합격")]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[db합격률]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[If(int전체항목수 &gt; 0, (int합격한항목수 / int전체항목수) * 100, 0)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[합격률]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[db합격률.ToString + "%"]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Subject2, 합격률}]" DataTable="[dt과목]" DisplayName="과목, 합격률 값 채우기 | Add Data Row" sap:VirtualizedContainerService.HintSize="480,211.2" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </Sequence>
    </Sequence>
    <Sequence DisplayName="결과파일 생성 | Sequence" sap:VirtualizedContainerService.HintSize="784,424" sap2010:WorkflowViewState.IdRef="Sequence_75">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:WriteRange AddHeaders="True" DataTable="[dt개인]" DisplayName="아웃풋시트 개인별 채우기 | Write Range Workbook" sap:VirtualizedContainerService.HintSize="387.2,156" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[Sheets(2)]" StartingCell="C2:D17" WorkbookPath="03자료\시험결과집계_지안.xlsx" />
      <ui:WriteRange AddHeaders="True" DataTable="[dt과목]" DisplayName="아웃풋시트 과목별 합격률 채우기Write Range Workbook" sap:VirtualizedContainerService.HintSize="387.2,139.2" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="[Sheets(2)]" StartingCell="G2:H5" WorkbookPath="03자료\시험결과집계_지안.xlsx" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="784,48" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;..시험결과집계 완료&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>